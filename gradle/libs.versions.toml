[versions]
## SDK Versions
minSdk = "21"
targetSdk = "34"
compileSdk = "34"

# Dependencies
kotlin = "1.9.22"
kmmBridge = "0.5.1"
android-gradle-plugin = "8.2.2"
coroutines = "1.7.3"
kotlinx-datetime = "0.5.0"
ktor = "2.3.7"

stately = "2.0.5"
kermit = "2.0.2"
skie = "0.6.1"

multiplatformSettings = "1.1.1"
sqlDelight = "2.0.1"

compose = "1.5.4"
composeCompiler = "1.5.8"

# Sample - Android
androidx-core = "1.12.0"
androidx-lifecycle = "2.7.0"
androidx-activity-compose = "1.8.2"
android-desugaring = "2.0.4"
koin = "3.5.3"

sharedlib = "0.4.+"

[libraries]
compose-compiler = { module = "androidx.compose.compiler:compiler", version.ref = "composeCompiler" }

coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }

kotlinx-dateTime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }

ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-ios = { module = "io.ktor:ktor-client-ios", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-okHttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-serialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-contentNegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }

multiplatformSettings = { module = "com.russhwolf:multiplatform-settings", version.ref = "multiplatformSettings" }

sqlDelight-android = { module = "app.cash.sqldelight:android-driver", version.ref = "sqlDelight" }
sqlDelight-coroutinesExt = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqlDelight" }
sqlDelight-native = { module = "app.cash.sqldelight:native-driver", version.ref = "sqlDelight" }
sqlDelight-runtime = { module = "app.cash.sqldelight:runtime", version.ref = "sqlDelight" }

touchlab-kermit = { module = "co.touchlab:kermit", version.ref = "kermit" }
touchlab-stately-common = { module = "co.touchlab:stately-common", version.ref = "stately" }
touchlab-stately-concurrency = { module = "co.touchlab:stately-concurrency", version.ref = "stately" }

# Sample - Android
androidx-core = { module = "androidx.core:core-ktx", version.ref = "androidx-core" }
androidx-lifecycle-runtime = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "androidx-lifecycle" }
androidx-lifecycle-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "androidx-lifecycle" }
androidx-lifecycle-compose = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }

compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
compose-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "compose" }
compose-material = { module = "androidx.compose.material:material", version.ref = "compose" }
compose-activity = { module = "androidx.activity:activity-compose", version.ref = "androidx-activity-compose" }

android-desugaring = { module = "com.android.tools:desugar_jdk_libs", version.ref = "android-desugaring" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }

sharedlib-analytics = { module = "co.touchlab.kmmbridgekickstartskie:analytics-android-debug", version.ref = "sharedlib" }
sharedlib-breeds = { module = "co.touchlab.kmmbridgekickstartskie:breeds-android-debug", version.ref = "sharedlib" }

[plugins]
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
sqlDelight = { id = "app.cash.sqldelight", version.ref = "sqlDelight" }
android-library = { id = "com.android.library", version.ref = "android-gradle-plugin" }
android-application = { id = "com.android.application", version.ref = "android-gradle-plugin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
skie = { id = "co.touchlab.skie", version.ref = "skie" }
kmmbridge = { id = "co.touchlab.kmmbridge", version.ref = "kmmBridge" }
cocoapods = { id = "org.jetbrains.kotlin.native.cocoapods", version.ref = "kotlin" }

[bundles]
ktor-common = ["ktor-client-core", "ktor-client-logging", "ktor-client-serialization", "ktor-client-contentNegotiation"]
app-ui = [
    "compose-compiler",
    "androidx-core",
    "androidx-lifecycle-runtime",
    "androidx-lifecycle-viewmodel",
    "androidx-lifecycle-compose",
    "compose-ui",
    "compose-tooling",
    "compose-foundation",
    "compose-material",
    "compose-activity"
]

